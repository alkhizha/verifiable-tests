<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8" />
    <title>{{name}}</title>
    <style>
      pre {
        white-space: pre-wrap
      }
      body {
        max-width: 480pt;
      }
    </style>
  </head>
  <body>
    <a href="..">Back to task list</a>
    <h3>{{name}}</h3>
    <p>Help on <a href="/help#Predicates">predicates</a> and
      <a href="/help#Specification">specification</a>.
    </p>
    <table border="1">
      <tr>
        <td><b>Task description:</b></td>
        <td>{{description}}</td>
      </tr>
      <tr>
        <td><b>Precondition:</b></td>
        <td><pre>{{precondition}}</pre></td>
      </tr>
      <tr>
        <td><b>Postcondition:</b></td>
        <td><pre>{{postcondition}}</pre></td>
      </tr>
      {{#each loops}}
        <tr>
          <td><b>Loop #{{number}} invariant:</b></td>
          <td><pre>{{invariant}}</pre></td>
        </tr>
        <tr>
          <td><b>Loop #{{number}} variant:</b></td>
          <td><pre>{{variant}}</pre></td>
        </tr>
      {{/each}}
    </table>
    {{#if shorthands}}
      <p>Shorthands used in specification:</p>
      <table border="1">
        {{#each shorthands}}
        <tr>
          <td><b><pre>{{declaration}}</pre></b></td>
          <td><pre>{{definition}}</pre></td>
        </tr>
        {{/each}}
      </table>
    {{/if}}
    {{!-- If verification has been performed,
          we'll display its results. --}}
    {{#if verification}}
      <a id="Results"></a>
      {{#if verification.parsingErrors}}
        <p>
          <b>Verification Results: </b>
          <a style="background-color:pink">
            The program contains syntax errors.
          </a>
        </p>
        <table border="1">
          <tr>
            <th>Coordinates</th>
            <th>Error description</th>
            <th>
              <button onclick="highlightSyntaxError()">
                Clear
              </button>
            </th>
          </tr>
          {{#each verification.parsingErrors}}
            <tr>
              <td>{{row}}:{{col}}</td>
              <td>{{message}}</td>
              <td>
                <button onclick="highlightSyntaxError({{row}}, {{col}})">
                  Show
                </button>
              </td>
            </tr>
          {{/each}}
        </table>
      {{else if verification.semanticErrors}}
        <p>
          <b>Verification Results: </b>
          <a style="background-color:pink">
            The program contains semantic errors.
          </a>
        </p>
        <table border="1">
          <tr>
            <th>From</th>
            <th>To</th>
            <th>Error description</th>
            <th>
              <button onclick="highlightSemnticError()">
                Clear
              </button>
            </th>
          </tr>
          {{#each verification.semanticErrors}}
            <tr>
              <td>{{start.row}}:{{start.col}}</td>
              <td>{{end.row}}:{{end.col}}</td>
              <td>{{message}}</td>
              <td>
                <button onclick="highlightSemnticError({{start.row}}, {{end.row}}, {{start.col}}, {{end.col}})">
                  Show
                </button>
              </td>
            </tr>
          {{/each}}
        </table>
      {{else}}
        <p>
          <b>Verification Results: </b>
          <a style="background-color:lightgreen">
            The solution is correct!
          </a>
        </p>
      {{/if}}
      <p>Your solution:</p>
      <p><pre id="code">{{code}}</pre></p>
    {{/if}}
    <form action="./{{name}}#Results" method="POST">
      <input type="hidden" name="name" value="{{name}}" />
      {{#if verification}}
        <p>You can enter a new solution in the text area below
          (<a href="/help#Pseudocode">language guide</a>).
        </p>
      {{else}}
        <p>Enter your solution in the text area below
          (<a href="/help#Pseudocode">language guide</a>).
        </p>
      {{/if}}
        {{!-- We might have no code in context. This is fine. --}}
        <textarea name="code" rows="15" cols="80">{{code}}</textarea>
      </p>
      <p>
        <input type="submit" value="Verify" />
      </p>
    </form>
  <script type="text/javascript">
    {{!-- Triple curly braces mean no html escaping. --}}
    const code = `{{{code}}}`
    const highlightOpening = `<a style="background-color:red; color:white">`
    const highlightClosing = `</a>`

    function highlightSyntaxError(row, col) {
      if (row == null || col == null) {
        highlightSemnticError()
      } else {
        highlightSemnticError(row, row, col, code.split('\n')[row-1].length-1)
      }
    }

    function highlightSemnticError(startRow, endRow, startCol, endCol) {
      if (startRow == null
       || endRow == null
       || startCol == null
       || endCol == null
       || startRow > endRow
       || startCol >= endCol)
      {
        document.getElementById('code').innerHTML = escapeHtml(code)
        return
      }
      const rows = code.split('\n')
      let anchor = 'anchor'
      while (code.indexOf(anchor) > 0) anchor += '0'
      if (startRow === endRow) {
        const row = rows[startRow-1].split('')
        row.splice(startCol,0,anchor)
        row.splice(endCol+2,0,anchor)
        rows[startRow-1] = row.join('')
      } else {
        const firstRow = rows[startRow-1].split('')
        firstRow.splice(startCol,0,anchor)
        rows[startRow-1] = firstRow.join('')
        const lastRow = rows[endRow-1].split('')
        lastRow.splice(endCol+1,0,anchor)
        rows[endRow-1] = lastRow.join('')
      }
      let res = rows.join('\n')
      res = escapeHtml(res)
      res = res.replace(anchor, highlightOpening)
      res = res.replace(anchor, highlightClosing)
      document.getElementById('code').innerHTML = res
    }

    // Shameless copypaste from stackoverflow.com/a/12034334
    var entityMap = {
      '&': '&amp;',
      '<': '&lt;',
      '>': '&gt;',
      '"': '&quot;',
      "'": '&#39;',
      '/': '&#x2F;',
      '`': '&#x60;',
      '=': '&#x3D;'
    };

    function escapeHtml (string) {
      return String(string).replace(/[&<>"'`=\/]/g, function fromEntityMap (s) {
        return entityMap[s];
      });
    }
  </script>
  </body>
</html>
