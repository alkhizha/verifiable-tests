{
    "name" : "slice sums",
    "description" : "Програма повинна записати у кожний елемент массиву суму цього та всіх попередніх елементів.",
    "human_readable_precondition" : "n > 0 ∧ b[0:n-1] = B[0:n-1]",
    "simplify_precondition" : "(AND (< 0 n) (EQ b B))",
    "human_readable_postcondition" : "(∀ k : 0 ≤ k < n : b[k] = (Σ k : 0 ≤ j ≤ k : B[k]))",
    "simplify_postcondition" : "(FORALL (k) (IMPLIES (AND (<= 0 k) (< k n)) (EQ (select b k) (sum B 0 k))))",
    "human_readable_loop_invariant" : "1 ≤ i ≤ n ∧ (∀ k : 0 ≤ k < i : b[k] = (Σ k : 0 ≤ j ≤ k : B[k])) ∧ (∀ k : i ≤ k < n : b[k] = B[k])",
    "simplify_loop_invariant" : "(AND (<= 1 i) (<= i n) (FORALL (k) (IMPLIES (AND (<= 0 k) (< k i)) (EQ (select b k) (sum B 0 k)))) (FORALL (k) (IMPLIES (AND (<= i k) (< k n)) (EQ (select b k) (select B k)))))",
    "human_readable_boundary_function" : "n - i",
    "simplify_boundary_function" : "(- n i)",
    "simplify_definitions" : "(BG_PUSH (FORALL (b i j) (AND (IMPLIES (> i j) (EQ (sum b i j) 0)) (IMPLIES (<= i j) (EQ (sum b i j) (+ (select b j) (sum b i (- j 1))))))))"
}
